name: Docker

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: orenderj/petalinux
  INSTALLER_PATH: /home/orenderj/fpga_helper

jobs:
  build:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - dockerfile: dockerfile_petalinux_2021_2
            version: 2021.2
          - dockerfile: dockerfile_petalinux_2023_1
            version: 2023.1
          - dockerfile: dockerfile_petalinux_2024_1
            version: 2024.1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --build-arg INSTALLER_PATH=/mnt/installer \
            --file ${{ matrix.dockerfile }} \
            --tag orenderj/petalinux:${{ matrix.version }} \
            --push \
            --label "${{ steps.meta.outputs.labels }}" \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            --mount type=bind,source=${{ env.INSTALLER_PATH }}/petalinux-v${{ matrix.version }}-final-installer.run,target=/mnt/installer/petalinux-installer.run .

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
